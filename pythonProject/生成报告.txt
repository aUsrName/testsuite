环境
1、插件 allure-pytest
2、下载文件 zip
github.com/allure-framework/allure/releases
    配置环境变量 path  bin路径，如E:\api-frame\pythonProject\allure-2.23.1\bin
3、重启pycharm验证是否成功   dos pycharm
    allure --version

生成allure报告
1、生成临时的json报告   .ini
    allure临时json报告,如放到temps，--clean-alluredir,每次生成清理文件夹
    --alluredir=temps --clean-alluredir

2、根据json生成html的allure报告  run.py
    allure命令，从temps生成，output到reports下，每次进行清空
    os.system('allure generate ./temps -o ./reports --clean')

企业级allure报告定制
1、企业logo定制
修改allure文件的配置文件，allure/config/allure.yml
改的插件位置是allure/plugins/custom-logo-plugin,名字加到allure.yml
plugins:
  - junit-xml-plugin
  - xunit-xml-plugin
  - trx-plugin
  - behaviors-plugin
  - packages-plugin
  - screen-diff-plugin
  - xctest-plugin
  - jira-plugin
  - xray-plugin
  - custom-logo-plugin
文件在static里 \allure-2.29.0\plugins\custom-logo-plugin
名字在style.css  background: url('custom-logo.svg') no-repeat left center !important;
更改样式同理，如：
/*
.side-nav__brand {
  background: url('custom-logo.svg') no-repeat left center !important;
  margin-left: 10px;
}
*/

.side-nav__brand {
  background: url('custom-logo.svg') no-repeat left center !important;
  margin-left: 10px;
  height:90px;
  background-size: contain !important;
}

.side-nav__brand-text {
  display: none;
}

2、项目机构报告定制
    报告左边定制：
    1）项目名称 使用装饰器加到类上，@allure.epic('项目名称')
    2）模块名称 使用装饰器加到类上，@allure.feature('模块名称')
    3）接口名称 使用装饰器加到类的方法上，@allure.story('接口名称')
        方法二：
        在方法中使用代码，allure.dynamic.story('接口名称')
    4）用例名称
        方法一：
        使用装饰器加到类的方法上，@allure.title('用例名称')

        方法二：
        在方法中使用代码，allure.dynamic.title('用例名称')

    报告右边定制：
    1）优先级(严重程度)： BLOCKER 致命的  CRITICAL 严重的  NORMAL 一般
        MINOR 提示  TRIVIAL 不重要，轻微
        使用装饰器加到类的方法上，@allure.severity(allure.severity_level.BLOCKER)
        方法二：
        在方法中使用代码，allure.dynamic.severity(allure.severity_level.BLOCKER)
    2）描述
        方法一：
        使用装饰器加到类的方法上，@allure.description('用户的登录接口成功用例')

        方法二：
        在方法中使用代码，allure.dynamic.description('注册接口测试用例')
    3）链接（不怎么使用）
    注意参数问题，多参数需要加url=,name=...
    接口地址，使用装饰器放到方法上或者代码放到方法内
    @allure.link('接口访问的链接')
    allure.dynamic.link('接口访问的链接')

    接口BUG链接，使用装饰器放到方法上或者代码放到方法内
    @allure.issue('bug链接')
    allure.dynamic.issue('bug链接')   #新pytest不支持

    测试用例链接，使用装饰器放到方法上或者代码放到方法内
    @allure.testcase('用例链接')
    allure.dynamic.testcase('用例链接')    #新pytest不支持

    4）执行（步骤）
    方法中加 allure.step('')