一般web自动化使用excel，需要的是定位方式、定位路径，都是字符串
接口自动化建议用yaml，因为接口内容有字符串、字典、空值、日期等，yaml都支持
yaml文件扩展名yml或者yaml，都是一样的，能和json字符串完美转换

yaml的用处
1、编写测试用例（接口自动化）
2、用于配置文件（环境、数据库、用户名密码等）

yaml的语法规则
区分大小写
使用缩进表示层级
使用 # 注释
null表示None
字符串一般不需要使用引号，如果有特殊表达式需要使用引号（可以是单引或双引）

文件读取一般是创建一个文件包，如commands，创建python文件，如yaml_util.py来操作
需要pyyaml库

数据类型
1、标量：单个的、不可再分的值（最基本的数据类型）
    常用的有整数、浮点数、字符串、布尔值、Null、日期时间
    data1: 字符串
    data2: True
    data3: 88
    data4: 168.3
    data5: null
    data6: 2023-9-1 20:18:15
2、字典（对象）：键值对，需要注意，key和value间一定要有空格，key:(空格)value,层级关系就代表字典的嵌套
同缩进的是同级别，如示例是字典嵌套
    测试:
        data1: 字符串
        data2: True
        data3: 88
        data4:
         data5: null
         data6: 2023-9-1 20:18:15
3、列表：使用一组‘-’开头的就是列表，注意是一组，如
    测试:
        - data1: 字符串
        - data2: True
        - data3: 88
    也可以用json格式写成：
    测试: {'测试': [{'data1': '字符串'}, {'data2': True}, {'data3': 88}]}

强制类型转换，比较鸡肋，不好用,转的时候要注意格式之间能不能转
    !!int 变量
    !!str 变量
    !!float 变量
    !!bool
    如：
    测试:
        - data1: 字符串
        - data2: !!str True
        - data3: !!str 88
        - data4: !!int '88'

引用：对于重复的值不需要重复去写，可以引用已有的值


